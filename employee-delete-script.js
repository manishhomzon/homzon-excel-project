document.addEventListener('DOMContentLoaded', () => {
    // 1. HTML рдПрд▓рд┐рдореЗрдВрдЯреНрд╕ рдХреЛ рдХреИрдкреНрдЪрд░ рдХрд░реЗрдВ
    const empNameSelect = document.getElementById('deleteEmpName');
    const deleteForm = document.getElementById('deleteForm');
    
    // рдирдпрд╛: рдореИрд╕реЗрдЬ рдХрдВрдЯреЗрдирд░ рдХреЛ рдХреИрдкреНрдЪрд░ рдХрд░реЗрдВ (рдорд╛рди рд▓реЗрдВ рдХрд┐ рдпрд╣ HTML рдореЗрдВ рдореМрдЬреВрдж рд╣реИ)
    const noRecordsMessageContainer = document.getElementById('noRecordsMessage');

    // ЁЯТе рд╕реБрд░рдХреНрд╖рд╛ рдЬрд╛рдБрдЪ: рдпрджрд┐ рдбреНрд░реЙрдкрдбрд╛рдЙрди рдирд╣реАрдВ рдорд┐рд▓рд╛, рддреЛ рд╕реНрдХреНрд░рд┐рдкреНрдЯ рдХреЛ рд░реЛрдХ рджреЗрдВ ЁЯТе
    if (!empNameSelect) {
        console.error("CRITICAL ERROR: 'deleteEmpName' select box not found. Cannot initialize delete feature.");
        return;
    }

    // ==========================================================
    // 2. рдПрдореНрдкреНрд▓реЙрдИ рдбреНрд░реЙрдкрдбрд╛рдЙрди рд▓реЛрдб рдХрд░реЗрдВ
    // ==========================================================
    try {
        const employeesRaw = localStorage.getItem('employees');
        console.log("Raw Employee Data for Deletion:", employeesRaw);
        
        const employees = JSON.parse(employeesRaw) || [];
        
        console.log("Total Employees found to load for deletion:", employees.length);
        
        if (employees.length === 0) {
            const option = document.createElement('option');
            option.value = '';
            option.textContent = '-- No Employees Registered --';
            empNameSelect.appendChild(option);
            
            // рдЕрдЧрд░ рдХреЛрдИ рдПрдореНрдкреНрд▓реЙрдИ рдирд╣реАрдВ рд╣реИ:
            // a) рдлреЙрд░реНрдо рдХреЛ рд╕рдмрдорд┐рдЯ рдХрд░рдиреЗ рд╕реЗ рд░реЛрдХреЗрдВ (рд╣рд╛рдЗрдб рдХрд░реЗрдВ)
            if(deleteForm) deleteForm.style.display = 'none'; 
            
            // b) рдирдпрд╛ рдореИрд╕реЗрдЬ рдФрд░ Back Button рджрд┐рдЦрд╛рдПрдБ
            if(noRecordsMessageContainer) {
                noRecordsMessageContainer.innerHTML = `
                    <div class="alert alert-info" style="
                        background-color: #f8d7da; 
                        border: 1px solid #f5c6cb; 
                        color: #721c24; 
                        padding: 15px; 
                        margin-bottom: 20px;
                        border-radius: 5px;">
                        тЪая╕П рд╕рднреА рдХрд░реНрдордЪрд╛рд░реА рд░рд┐рдХреЙрд░реНрдб рд╕рдлрд▓рддрд╛рдкреВрд░реНрд╡рдХ рдбрд┐рд▓реАрдЯ рдХрд░ рджрд┐рдП рдЧрдП рд╣реИрдВред
                    </div>
                    <a href="dashboard.html" class="action-btn back-btn" style="
                        display: inline-block; 
                        background-color: #007bff; 
                        color: white; 
                        text-decoration: none; 
                        padding: 10px 15px; 
                        border-radius: 4px;">
                        тЖР Dashboard рдкрд░ рд╡рд╛рдкрд╕ рдЬрд╛рдПрдБ
                    </a>
                `;
            }
            return;
        } else {
            // рдЕрдЧрд░ рдХрд░реНрдордЪрд╛рд░реА рд╣реИрдВ, рддреЛ рд╕реБрдирд┐рд╢реНрдЪрд┐рдд рдХрд░реЗрдВ рдХрд┐ рдореИрд╕реЗрдЬ рдХрдВрдЯреЗрдирд░ рдЦрд╛рд▓реА рд╣реИ
            if(noRecordsMessageContainer) noRecordsMessageContainer.innerHTML = '';
        }

        employees.forEach(employee => {
            const option = document.createElement('option');
            option.value = employee.uniqueId;
            // рдирд╛рдо рдХреЗ рд╕рд╛рде рдбрд┐рдкрд╛рд░реНрдЯрдореЗрдВрдЯ рджрд┐рдЦрд╛рдПрдВ
            option.textContent = employee.name + ' (' + employee.department + ')'; 
            empNameSelect.appendChild(option);
        });

    } catch (error) {
        console.error("Error loading employees from Local Storage for deletion:", error);
    }


    // ==========================================================
    // 3. рдбрд┐рд▓реАрд╢рди рд▓реЙрдЬрд┐рдХ
    // ==========================================================
    if (deleteForm) {
        deleteForm.addEventListener('submit', function(event) {
            event.preventDefault(); 
            
            const uniqueIdToDelete = empNameSelect.value;
            const employeeName = empNameSelect.options[empNameSelect.selectedIndex].textContent;

            if (!uniqueIdToDelete) {
                alert("Please select an employee to delete.");
                return;
            }

            const confirmation = confirm(
                `WARNING: Are you sure you want to PERMANENTLY delete the record for ${employeeName}?\n\nThis action cannot be undone.`
            );

            if (confirmation) {
                // 1. рдПрдореНрдкреНрд▓реЙрдИ рдХреЛ 'employees' array рд╕реЗ рдлрд╝рд┐рд▓реНрдЯрд░ рдХрд░реЗрдВ
                const employeesRaw = localStorage.getItem('employees');
                const currentEmployees = JSON.parse(employeesRaw) || [];
                const updatedEmployees = currentEmployees.filter(emp => emp.uniqueId !== uniqueIdToDelete);
                localStorage.setItem('employees', JSON.stringify(updatedEmployees));
                
                // 2. рдЕрдЯреЗрдВрдбреЗрдВрд╕ рд╣рд┐рд╕реНрдЯреНрд░реА рд╕реЗ рднреА рд░рд┐рдХреЙрд░реНрдбреНрд╕ рд╣рдЯрд╛рдПрдБ 
                const historyRaw = localStorage.getItem('attendanceHistory');
                const attendanceHistory = JSON.parse(historyRaw) || [];
                const updatedAttendanceHistory = attendanceHistory.filter(record => record.uniqueId !== uniqueIdToDelete);
                localStorage.setItem('attendanceHistory', JSON.stringify(updatedAttendanceHistory));


                alert(`тЬЕ Employee ${employeeName} and their attendance history have been successfully deleted.`);
                
                // рдкреЗрдЬ рдХреЛ рд░реАрд▓реЛрдб рдХрд░реЗрдВ рддрд╛рдХрд┐ рдбреНрд░реЙрдкрдбрд╛рдЙрди рдЕрдкрдбреЗрдЯ рд╣реЛ рдЬрд╛рдП
                window.location.reload(); 
            } else {
                alert("Deletion cancelled.");
            }
        });
    }
});